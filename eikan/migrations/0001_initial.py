# Generated by Django 2.2.6 on 2019-11-01 06:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_type', models.IntegerField(choices=[(0, '選択'), (1, '甲子園')], default=0, verbose_name='大会')),
                ('competiton_round', models.IntegerField(choices=[(0, '選択'), (1, '1回戦')], default=0, verbose_name='回戦')),
                ('result', models.IntegerField(choices=[(0, '選択'), (1, '勝'), (2, '負'), (3, '分')], default=0, verbose_name='勝敗')),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='得点')),
                ('run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='失点')),
                ('lank', models.IntegerField(choices=[(0, '選択'), (1, 'そこそこ')], default=0, verbose_name='ランク')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name_plural': '試合情報',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1939)], verbose_name='入学年度')),
                ('name', models.CharField(max_length=6, verbose_name='名前')),
                ('position', models.IntegerField(choices=[(0, '選択'), (1, '投'), (2, '捕')], default=0, verbose_name='守備位置')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='備考')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name_plural': '選手情報',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1941)], verbose_name='年度')),
                ('period', models.IntegerField(choices=[(0, '選択'), (1, '夏'), (2, '秋')], default=0, verbose_name='期間')),
                ('prefecture', models.IntegerField(choices=[(0, '選択'), (1, '北北海道'), (2, '南北海道')], default=0, verbose_name='都道府県')),
                ('training_policy', models.IntegerField(choices=[(0, '選択'), (1, 'おまかせ'), (2, '打撃')], default=0, verbose_name='育成方針')),
                ('draft_nomination', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='指名人数')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='備考')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name_plural': 'チーム情報',
            },
        ),
        migrations.CreateModel(
            name='Pitcher_results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='登板数')),
                ('games_started', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='先発登板')),
                ('innings_pitched', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='イニング')),
                ('total_batters_faced', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='対戦打者')),
                ('number_of_pitch', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='投球数')),
                ('hit', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='被安打')),
                ('strike_out', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='三振')),
                ('bases_on_balls', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='四球')),
                ('hit_by_pitch', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='死球')),
                ('run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='失点')),
                ('earned_run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='自責点')),
                ('wild_pitch', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='暴投')),
                ('home_run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='本塁打')),
                ('sacrifice_bunt', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='犠打')),
                ('sacrifice_fly', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='犠飛')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Games')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Players')),
            ],
            options={
                'verbose_name_plural': '投手成績',
            },
        ),
        migrations.AddField(
            model_name='games',
            name='team_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Teams'),
        ),
        migrations.CreateModel(
            name='Fielder_results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_bat', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='打数')),
                ('run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='得点')),
                ('two_base', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='二塁打')),
                ('three_base', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='三塁打')),
                ('home_run', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='本塁打')),
                ('run_batted_in', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='打点')),
                ('strike_out', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='三振')),
                ('bases_on_balls', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='四球')),
                ('hit_by_pitch', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='死球')),
                ('sacrifice_bunt', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='犠打')),
                ('sacrifice_fly', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='犠飛')),
                ('stolen_base', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='盗塁')),
                ('grounded_into_double_play', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='併殺')),
                ('error', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='失策')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='更新日')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Games')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Players')),
            ],
            options={
                'verbose_name_plural': '打者成績',
            },
        ),
    ]
