# Generated by Django 2.2.6 on 2020-03-31 04:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import eikan.models.fielder_results
import eikan.models.games
import eikan.models.pitcher_results
import eikan.models.players
import eikan.models.teams
from eikan.model_manager import DefaultValueExtractor as d


class Migration(migrations.Migration):

    replaces = [
        ('eikan',
         '0001_initial'),
        ('eikan',
         '0002_auto_20191213_1517'),
        ('eikan',
         '0003_auto_20200115_1541'),
        ('eikan',
         '0004_auto_20200118_1626'),
        ('eikan',
         '0005_modelsettings'),
        ('eikan',
         '0006_auto_20200129_1011'),
        ('eikan',
         '0007_auto_20200130_1458'),
        ('eikan',
         '0008_auto_20200216_2253'),
        ('eikan',
         '0009_auto_20200218_1000'),
        ('eikan',
         '0010_auto_20200327_1509'),
        ('eikan',
         '0011_pitchertotalresults_previous_game_pitched'),
        ('eikan',
         '0012_auto_20200329_2233')]

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_type', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '練習試合'), (2, '県大会'), (3, '地区大会'), (4, '甲子園'), (5, 'センバツ')], default=0, verbose_name='大会')),
                ('competiton_round', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '練習試合'), (2, '1回戦'), (3, '2回戦'), (4, '3回戦'), (5, '4回戦'), (6, '準々決勝'), (7, '準決勝'), (8, '決勝')], default=0, verbose_name='回戦')),
                ('result', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '勝'), (2, '負'), (3, '分')], default=0, verbose_name='勝敗')),
                ('score', models.PositiveSmallIntegerField(default=0, verbose_name='得点')),
                ('run', models.PositiveSmallIntegerField(default=0, verbose_name='失点')),
                ('rank', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '弱小'), (2, 'そこそこ'), (3, '中堅'), (4, '強豪'), (5, '名門')], default=0, verbose_name='ランク')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name': '試合情報',
                'verbose_name_plural': '(1)試合情報',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_year', models.PositiveSmallIntegerField(default=d.create_default_year_for_players, validators=[django.core.validators.MinValueValidator(1939)], verbose_name='入学年度')),
                ('name', models.CharField(max_length=6, verbose_name='名前')),
                ('position', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '投'), (2, '捕'), (3, '一'), (4, '二'), (5, '三'), (6, '遊'), (7, '外')], default=0, verbose_name='メインポジション')),
                ('is_pitched', models.BooleanField(default=False, verbose_name='野手登板')),
                ('is_ob', models.BooleanField(default=False, verbose_name='OB')),
                ('is_active', models.BooleanField(default=False, verbose_name='現役')),
                ('is_genius', models.BooleanField(default=False, verbose_name='天才')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='備考')),
                ('is_pitcher', models.BooleanField(default=False, editable=False, verbose_name='投手')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name': '選手情報',
                'verbose_name_plural': '(2)選手情報',
                'ordering': ['admission_year', 'position'],
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(default=d.create_default_year_for_teams, validators=[django.core.validators.MinValueValidator(1941)], verbose_name='年度')),
                ('period', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '夏'), (2, '秋')], default=d.create_default_period, verbose_name='期間')),
                ('prefecture', models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '北北海道'), (2, '南北海道'), (3, '青森'), (4, '岩手'), (5, '宮城'), (6, '秋田'), (7, '山形'), (8, '福島'), (9, '茨城'), (10, '栃木'), (11, '群馬'), (12, '埼玉'), (13, '千葉'), (14, '神奈川'), (15, '山梨'), (16, '東東京'), (17, '西東京'), (18, '新潟'), (19, '富山'), (20, '石川'), (21, '福井'), (22, '長野'), (23, '岐阜'), (24, '静岡'), (25, '愛知'), (26, '三重'), (27, '滋賀'), (28, '京都'), (29, '大阪'), (30, '兵庫'), (31, '奈良'), (32, '和歌山'), (33, '鳥取'), (34, '島根'), (35, '岡山'), (36, '広島'), (37, '山口'), (38, '徳島'), (39, '香川'), (40, '愛媛'), (41, '高知'), (42, '福岡'), (43, '佐賀'), (44, '長崎'), (45, '熊本'), (46, '大分'), (47, '宮崎'), (48, '鹿児島'), (49, '沖縄')], default=d.create_default_prefecture, verbose_name='都道府県')),
                ('training_policy', models.PositiveSmallIntegerField(choices=[(0, '選択'), (1, 'バランス'), (2, '打撃力'), (3, '機動力'), (4, '守備・投手')], default=0, verbose_name='育成方針')),
                ('draft_nomination', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='指名人数')),
                ('remark', models.CharField(blank=True, max_length=100, null=True, verbose_name='備考')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
            ],
            options={
                'verbose_name': 'チーム情報',
                'verbose_name_plural': '(3)チーム情報',
                'ordering': ['-year', '-period'],
            },
        ),
        migrations.CreateModel(
            name='PitcherResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_started', models.BooleanField(default=False, verbose_name='先発登板')),
                ('innings_pitched', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)], verbose_name='イニング')),
                ('innings_pitched_fraction', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)], verbose_name='/3')),
                ('number_of_pitch', models.PositiveSmallIntegerField(default=0, verbose_name='投球数')),
                ('total_batters_faced', models.PositiveSmallIntegerField(default=0, verbose_name='対戦打者')),
                ('hit', models.PositiveSmallIntegerField(default=0, verbose_name='被安打')),
                ('strike_out', models.PositiveSmallIntegerField(default=0, verbose_name='三振')),
                ('bb_hbp', models.PositiveSmallIntegerField(default=0, verbose_name='四死球')),
                ('run', models.PositiveSmallIntegerField(default=0, verbose_name='失点')),
                ('earned_run', models.PositiveSmallIntegerField(default=0, verbose_name='自責点')),
                ('wild_pitch', models.PositiveSmallIntegerField(default=0, verbose_name='暴投')),
                ('home_run', models.PositiveSmallIntegerField(default=0, verbose_name='本塁打')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Games')),
                ('player_id', models.ForeignKey(limit_choices_to=eikan.models.pitcher_results.set_select_pitchers, on_delete=django.db.models.deletion.CASCADE, to='eikan.Players', verbose_name='選手')),
            ],
            options={
                'verbose_name': '投手一覧',
                'verbose_name_plural': '投手成績',
            },
        ),
        migrations.AddField(
            model_name='games',
            name='team_id',
            field=models.ForeignKey(default=d.create_default_team_id, on_delete=django.db.models.deletion.CASCADE, to='eikan.Teams', verbose_name='チーム'),
        ),
        migrations.CreateModel(
            name='FielderResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_bat', models.PositiveSmallIntegerField(default=0, verbose_name='打数')),
                ('run', models.PositiveSmallIntegerField(default=0, verbose_name='得点')),
                ('hit', models.PositiveSmallIntegerField(default=0, verbose_name='安打')),
                ('two_base', models.PositiveSmallIntegerField(default=0, verbose_name='二塁打')),
                ('three_base', models.PositiveSmallIntegerField(default=0, verbose_name='三塁打')),
                ('home_run', models.PositiveSmallIntegerField(default=0, verbose_name='本塁打')),
                ('run_batted_in', models.PositiveSmallIntegerField(default=0, verbose_name='打点')),
                ('strike_out', models.PositiveSmallIntegerField(default=0, verbose_name='三振')),
                ('bb_hbp', models.PositiveSmallIntegerField(default=0, verbose_name='四死球')),
                ('sacrifice_bunt', models.PositiveSmallIntegerField(default=0, verbose_name='犠打')),
                ('stolen_base', models.PositiveSmallIntegerField(default=0, verbose_name='盗塁')),
                ('grounded_into_double_play', models.PositiveSmallIntegerField(default=0, verbose_name='併殺')),
                ('error', models.PositiveSmallIntegerField(default=0, verbose_name='失策')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eikan.Games')),
                ('player_id', models.ForeignKey(limit_choices_to=eikan.models.fielder_results.set_select_players, on_delete=django.db.models.deletion.CASCADE, to='eikan.Players', verbose_name='選手')),
            ],
            options={
                'verbose_name': '打者一覧',
                'verbose_name_plural': '打者成績',
            },
        ),
        migrations.AlterField(
            model_name='games',
            name='result',
            field=models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '勝'), (2, '負'), (3, '分')], default=0, editable=False, verbose_name='勝敗'),
        ),
        migrations.CreateModel(
            name='FielderTotalResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_bat', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='打数')),
                ('run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='得点')),
                ('hit', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='安打')),
                ('two_base', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='二塁打')),
                ('three_base', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='三塁打')),
                ('home_run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='本塁打')),
                ('run_batted_in', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='打点')),
                ('strike_out', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='三振')),
                ('bb_hbp', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='四死球')),
                ('sacrifice_bunt', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='犠打')),
                ('stolen_base', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='盗塁')),
                ('grounded_into_double_play', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='併殺')),
                ('error', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='失策')),
                ('total_bases', models.PositiveIntegerField(default=0, editable=False, verbose_name='塁打')),
                ('slg', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='長打率')),
                ('obp', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='出塁率')),
                ('ops', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='OPS')),
                ('gpa', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='GPA')),
                ('batting_average', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='打率')),
                ('bbhp_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='BBHP%')),
                ('isod', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='IsoD')),
                ('isop', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='IsoP')),
                ('bbhp_k', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='BBHP/K')),
                ('p_s', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='P-S')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('player_id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='eikan.Players', verbose_name='選手')),
                ('br', models.DecimalField(decimal_places=1, default=0.0, editable=False, max_digits=4, verbose_name='BR')),
                ('woba', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='wOBA')),
            ],
            options={
                'verbose_name': '打者総合成績',
                'verbose_name_plural': '打者総合成績',
            },
        ),
        migrations.CreateModel(
            name='ModelSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_used_limit_choices_to', models.BooleanField(default=False, verbose_name='過去の試合を修正する')),
            ],
            options={
                'verbose_name': '設定',
                'verbose_name_plural': '設定',
            },
        ),
        migrations.AlterField(
            model_name='games',
            name='rank',
            field=models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '弱小'), (2, 'そこそこ'), (3, '中堅'), (4, '強豪'), (5, '名門')], default=d.create_default_team_rank, verbose_name='ランク'),
        ),
        migrations.CreateModel(
            name='TeamTotalResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_win', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='勝')),
                ('total_lose', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='負')),
                ('total_draw', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='分')),
                ('score', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='得点')),
                ('run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='失点')),
                ('score_difference', models.IntegerField(default=0, editable=False, verbose_name='得失点差')),
                ('batting_average', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='打率')),
                ('ops', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='OPS')),
                ('hr', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='本塁打')),
                ('era', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=5, verbose_name='防御率')),
                ('der', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=4, verbose_name='DER')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('team_id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='eikan.Teams', verbose_name='チーム')),
                ('is_to_win', models.BooleanField(default=False, editable=False, verbose_name='優勝')),
                ('rank', models.CharField(blank=True, editable=False, max_length=4, null=True, verbose_name='ランク')),
            ],
            options={
                'verbose_name': 'チーム総合成績',
                'verbose_name_plural': 'チーム総合成績',
            },
        ),
        migrations.RenameField(
            model_name='games',
            old_name='competiton_round',
            new_name='competition_round',
        ),
        migrations.AlterField(
            model_name='games',
            name='competition_round',
            field=models.PositiveSmallIntegerField(choices=[('', '選択'), (1, '練習試合'), (2, '1回戦'), (3, '2回戦'), (4, '3回戦'), (6, '準々決勝'), (7, '準決勝'), (8, '決勝')], default=0, verbose_name='回戦'),
        ),
        migrations.CreateModel(
            name='PitcherTotalResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='登板')),
                ('games_started', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='先発登板')),
                ('innings_pitched', models.FloatField(default=0.0, editable=False, verbose_name='イニング')),
                ('number_of_pitch', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='投球数')),
                ('total_batters_faced', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='対戦打者')),
                ('hit', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='被安打')),
                ('strike_out', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='三振')),
                ('bb_hbp', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='四死球')),
                ('run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='失点')),
                ('earned_run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='自責点')),
                ('wild_pitch', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='暴投')),
                ('home_run', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='本塁打')),
                ('era', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='防御率')),
                ('ura', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='失点率')),
                ('whip', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='WHIP')),
                ('k_bbhp', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='K/BBHP')),
                ('k_9', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='K/9')),
                ('k_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='K%')),
                ('bbhp_9', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='BBHP/9')),
                ('p_bbhp_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='BBHP%')),
                ('hr_9', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='HR/9')),
                ('hr_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='HR%')),
                ('lob_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='LOB%')),
                ('p_ip', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='P/IP')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('player_id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='eikan.Players', verbose_name='選手')),
                ('h_9', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='H/9')),
                ('h_percent', models.DecimalField(decimal_places=3, default=0.0, editable=False, max_digits=6, verbose_name='H%')),
                ('previous_game_pitched', models.FloatField(default=0.0, editable=False, verbose_name='前回登板')),
            ],
            options={
                'verbose_name': '投手総合成績',
                'verbose_name_plural': '投手総合成績',
            },
        ),
    ]
